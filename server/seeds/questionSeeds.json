[
  {
    "name": "Odd or Even",
    "question": "Write code to return the string \"odd\" if number is an odd number and return the string \"even\" if number is an even number. Use the number 74 to solve the problem.",
    "answer": "even",
    "hint": "Use a conditional statement to see if the number is even or odd.",
    "solution": "var oddOrEven = function(num) { \n    if (num%2===0){ \n        console.log(\"even\") \n    } \n    else{ \n        console.log(\"odd\") \n    } \n };\n oddOrEven(74)",
    "comment":"var oddOrEven = function(num) { \n };\n oddOrEven(74)",
    "difficulty_id": 1,
    "language_id": 2
  },
  {
    "name": "Palindrome",
    "question": "Write code that returns true if string is a palindrome, and false if string is not a palindrome. Use the word \"Palindrome\" to test.",
    "answer": "false",
    "hint": "Can create an array to reverse all of the letters in the world and then join them together to create string.",
    "solution": "var isPalindrome = function(str) { \n const str1= str.toLowerCase() \n const newArray= Array.from(str1).reverse().join(\"\")\n  return (str1===newArray)\n };\n console.log(isPalindrome('Palindrome'))",
    "comment":"var isPalindrome = function(str) { \n };\n console.log(isPalindrome('Palindrome'))",
    "difficulty_id": 1,
    "language_id": 2
  },
  {
    "name": "CountDown",
    "question": "Write code to print all numbers from the number down to zero and save in an array.",
    "answer": "[6,5,4,3,2,1,0]",
    "hint": "Use a for loop with decrement to reverse through the numbers.",
    "solution": "let count =[]\nvar countdown = function(num) {\nfor(let i=num; i>=0; i--){\ncount.push(i)\n}\nreturn count\n};\n console.log(countdown(6))",
    "comment":"var countdown = function(num) {};\n console.log(countdown(6))",
    "difficulty_id": 1,
    "language_id": 2
  },
  { 
    "name": "Array Addition",
    "question": "Write code to add all the numbers in the array below and return the total.",
    "answer": "25",
    "hint": "Can use a loop to add all of the numbers in an array. Another was is to use the reducer function",
    "comment": "//Use the array given to solve the problem \n const array=[1,2,3,4,5,5,5] ",
    "solution": "const array =[1,2,3,4,5,5,5] \n var sumArray = function(total, currentValue) { \n return total + currentValue \n}; \n console.log(array.reduce(sumArray))",
    "difficulty_id": 1,
    "language_id": 2
   },
   {
    "name": "Factorial",
    "question": "Write code to create a function that returns the factorial of the number. Use the number 5 to answer the question.",
    "answer": "120",
    "hint": "Factorial: product of all positive integers less than or equal to a given positive integer.",
    "solution": "var factorial = function(num) { \n   var count=1 \n   for (let i=1; i<num+1; i++){ \n    count = count * i \n  } \n   return count \n }; \n \n console.log(factorial(5));",
    "difficulty_id": 1,
    "language_id": 2
   },
   {  
    "name": "TitleCase",
    "question": "Write code to create a function takes a string and returns a new string with the first letters of each word capitalized. Use the phrase \"how is your day going\" to solve the problem.",
    "answer": "How Is Your Day Going",
    "hint": "Loop through string and capitalize the first letter of each word. Methods that can use to complete the challenge. The substr() method extracts part of a string. The join() method returns and array as a string.",
    "solution": "var titleCase = function(str) { \n   const trial=str.split(' ') \n   const loopT = trial.map(s=> s[0].toUpperCase()+ s.substr(1)).join(\" \") \n return loopT \n }; console.log(titleCase(\"how is your day going\"))",
    "difficulty_id": 2,
    "language_id": 2
   },
   { 
    "name": "Product of 2 Largest",
    "question": "Write code to create a function that accepts an array of numbers, finds the largest two numbers, and returns the product of the two.",
    "answer": "60",
    "hint": "Find the largest number in an array. Then remove the largest number and grab the next highest number. ",
    "comment": "//Use the array given to solve the problem \n const array = [2,6,5, 40,8,3,4,2, 20]",
    "solution": "const array = [2,6,5, 40,8,3,4,2, 20] \n var productOfLargestTwo = function(arr) { \n   const largest = Math.max(...arr) \n   arr.splice(arr.indexOf(largest),1) \n   const second = Math.max(...arr) \n return largest + second \n }; \n \n console.log(productOfLargestTwo(array))",
    "difficulty_id": 2,
    "language_id": 2
   },
   { 
    "name": "Anagram",
    "question": "Write code to create a function that accepts two strings. Return true if the strings are anagrams of each other, otherwise return false. Use the words battle and tablet to test the function.",
    "answer": "true",
    "hint": "An anagram is a word or phrase by rearranging the letters of another word. Create arrays of the characters and sort to determine if the all of the characters are the same.",
    "comment": " const strA=\"battle\" \n  const strB=\"tablet\" ",
    "solution": "var isAnagram = function(strA, strB) { \n    const loweredA= strA.toLowerCase() \n    const loweredB= strB.toLowerCase() \n   const arrayA= Array.from(loweredA).sort() \n    const arrayB= Array.from(loweredB).sort() \n    const newA = arrayA.join() \n    const newB= arrayB.join() \n   return newA===newB \n }; \n \n const strA=\"battle\" \n const strB=\"tablet\" \n console.log(isAnagram(strA, strB))",
    "difficulty_id": 2,
    "language_id": 2
   },
   { 
    "name": "Create a Person",
    "question": "Write a JavaScript program to create a class called Person with properties for name, age, and country. Include a method to display the persons details. Use the following criteria and return in this format- Name: Trevor, Age: 25, and Country: France.",
    "answer": " Name: Trevor Age: 25 Country: France",
    "hint": "First create a constructor for a Person object. Then create a method to log the name, age, and properties for the person. Lastly create an instance of a Person with the given criteria.",
    "solution": "class Person { \n   constructor(name, age, country) { \n     this.name = name; \n     this.age = age; \n     this.country = country; \n   } \n \n   displayDetails() { \n     console.log(`Name: ${this.name}`); \n     console.log(`Age: ${this.age}`); \n     console.log(`Country: ${this.country}`); \n   } \n } \n  const person1 = new Person('Trevor', 25, 'France'); \n person1.displayDetails();",
    "difficulty_id": 2,
    "language_id": 2
   },
   {
    "name": "Percentile",
    "question": " Write a JavaScript program to calculate how many numbers in the given array are less than or equal to the value 3 in the given array below.",
    "answer": "50",
    "hint": "Use the filter for arrays in order to see if the numbers in the array are less than or greater than the given value.",
    "comment": "//Use the array given to find the percentile of number 3 \n const array = [1, 2, 3, 4, 5, 6]",
    "solution": "const percentile = (arr, num) => ( \n arr.filter((item) => item <= num).length / arr.length) * 100; \nconsole.log(percentile([1, 2, 3, 4, 5, 6],3))",
    "difficulty_id": 2,
    "language_id": 2
   },
   { 
    "name": "Division",
    "question": "Write a Java program to take 2 numbers, divide them, and return the answer rounded to the hundredths position. Use 1025 as the numerator and 6 as the denominator.",
    "answer": "170.83",
    "hint": "Divide the two inputs and save in a new variable. Then format the answer to the hundredths position.",
    "comment":"//Numerator: 1025 & Denominator:6",
    "solution": "public class Main { \n public static void main(String[] args) { \n float result = (float)1025 / 6; \n System.out.format(\"%.2f\", result); \n }\n } ",
    "difficulty_id": 1,
    "language_id": 1
   },
   {
    "name": "Calculate Interest",
    "question": "Find the simple interest for a $10,000 amount at the rate of 5% for 5 years.",
    "answer": "2500",
    "hint": "Simple Interest is calculated: (Amount x Time x Rate)/100",
    "solution": "class Main { \n public static void main(String args[]) \n { \n int P = 10000, R = 5, T = 5; \n \n int SI = (P * T * R) / 100; \n System.out.println(SI); \n }\n }",
    "difficulty_id": 1,
    "language_id": 1
   },
   { 
    "name": "Vowel Search",
    "question": "Create a Java program to see if the string \"Hello\" contains vowels.",
    "answer": "true",
    "hint": "Use regular expression: https://www.w3schools.com/java/java_regex.asp",
    "solution": "public class Main { \n public static void main(String[] args) { \n System.out.println(stringContainsVowels(\"Hello\")); \n } \n \n public static boolean stringContainsVowels(String input) { \n return input.toLowerCase().matches(\".*[aeiou].*\"); \n } \n }",
    "difficulty_id": 1,
    "language_id": 1
   },
   {
    "name": "Prime Number",
    "question": "Write a Java program to determine if the number is prime. Return true if it is and false if it is not. Use number 49 to test the program.",
    "answer": "false",
    "hint": "A prime number are numbers greater than 1 with exactly two factors, 1 and the number itself",
    "solution": "public class Main { \n public static void main(String[] args) { \n System.out.println(isPrime(49)); \n } \n \n public static boolean isPrime(int n) { \n if (n == 0 || n == 1) { \n return false; \n } \n if (n == 2) { \n return true; \n } \n for (int i = 2; i <= n / 2; i++) { \n if (n % i == 0) { \n return false; \n } \n } \n return true; \n } \n }",
    "difficulty_id": 1,
    "language_id": 1
   },
   { 
    "name": "Array Sum",
    "question": "Add all of the numbers in the array below and return them in a variable.",
    "answer": "46",
    "hint": "Create a loop in order to add all of the integers.",
    "comment": " int[] array = { 7, 2, 24, 4, 9 }; ",
    "solution": "public class Main { \n  public static void main(String[] args) { \n  int[] array = { 7, 2, 24, 4, 9 }; \n \n int sum = 0; \n \n for (int i : array) \n   sum += i; \n \n System.out.println(sum); \n   }\n }",
    "difficulty_id": 1,
    "language_id": 1
   },
   {
    "name": "Negative List",
    "question": "Given a list of numbers, write a Python program to print all negative numbers in the given list.",
    "answer": "-21 -93 ",
    "hint": "Loop through the array checking to see if each number meets the condition of being less than zero.",
     "comment": "numList=[11, -21, 0, 45, 66, -93]",
    "solution": "list1 = [11, -21, 0, 45, 66, -93]\nfor num in list1:\n    if num < 0:\n      print(num)",
    "difficulty_id": 1,
    "language_id": 3
},
{
    "name": "Swap Commas",
    "question": "Replace all the commas with periods and all the periods with commas for the string below.",
    "answer": " 14.625.498, 002",
    "hint": "On possible solution is to use maketrans and translate methods. Another method is to use the replace to change characters in the string.",
    "comment": "string = \"14, 625, 498.002\"",
    "solution": "def Replace(str1):\n    maketrans = str1.maketrans\n    final = str1.translate(maketrans(',.', '.,', ' '))\n    return final.replace(',', \", \")\n\nstring = \"14, 625, 498.002\"\nprint(Replace(string))",
    "difficulty_id": 1,
    "language_id": 3
},
{
    "name": "Sorting Dictionary",
    "question": "Write a program that takes the provided dictionary and sorts it according to the keys.",
    "answer": "{'Bob': 2, 'Collin': 9, 'Kyle': 32, 'Sarah': 15, 'Zoey': 10}",
    "hint": "Create a list of all the keys and then sort the list. Create a new dictionary by iterating over an iterable and specifying how to map keys to values",
    "comment": "myDict = {'Zoey': 10, 'Collin': 9,'Sarah': 15, 'Bob': 2, 'Kyle': 32}",
    "solution": "myDict = {'Zoey': 10, 'Collin': 9,'Sarah': 15, 'Bob': 2, 'Kyle': 32}\n\nmyKeys = list(myDict.keys())\nmyKeys.sort()\nsorted_dict = {i: myDict[i] for i in myKeys}\n\nprint(sorted_dict)",
    "difficulty_id": 1,
    "language_id": 3
},
{
    "name": "Dictionary Sum",
    "question": "Write a program that takes the provided dictionary returns the sum of all the values to help the \"Normal Store\" figure out how much inventory they have.",
    "answer": "600",
    "hint": "Loop through the dictionary and append all of the values to a list. Return the sum of the list to find the inventory for the store. ",
    "comment": "myDict = {'Shirts': 100, 'Socks': 200, 'Hats': 300}",
    "solution": "def returnSum(myDict):\n  list = []\n  for i in myDict:\n      list.append(myDict[i])\n  final = sum(list)\n\n  return final\n\nmyDict = {'Shirts': 100, 'Socks': 200, 'Hats': 300}\nprint(returnSum(myDict))",
    "difficulty_id": 1,
    "language_id": 3
},
{
    "name": "Extract Strings",
    "question": "Given the string and with HTML tags, extract all of the strings in the specific tag.",
    "answer": "['Python', 'great']",
    "hint": "Use the re module (RegeEx) in order to extract the strings between all the p tags.",
    "comment": "# importing re module\n import re\ntest_str = '<p>Python</p><span>is</span><p>great</p>'\ntag = \"p\"",
    "solution": "import re\ntest_str = '<p>Python</p><span>is</span><p>great</p>'\ntag = \"p\"\nreg_str = \"<\" + tag + \">(.*?)</\" + tag + \">\"\nres = re.findall(reg_str, test_str)\n\nprint(str(res))",
    "difficulty_id": 1,
    "language_id": 3
},
{
  "name": "Conditional Calculation ",
  "question": "Given two integer numbers, return their product only if the product is equal to or lower than 1000. Otherwise, return their sum. Call the function twice: once using 20 & 30, the second time using 40 & 30",
  "answer": "600 70",
  "hint": "Use a conditional statement to see if the product is over 1000. If under return the product if greater than 1000 return the sum",
  "comment": "# Set 1: 20 & 30 \n# Set 2: 40 &30",
  "solution": "def multiplication_or_sum(num1, num2):\n  product = num1 * num2\n  if product <= 1000:\n     return product\n  else:\n    return num1 + num2\n\nresult = multiplication_or_sum(20, 30)\nprint(result)\n\nresult = multiplication_or_sum(40, 30)\nprint(result)",
  "difficulty_id": 2,
  "language_id": 3
},
{
  "name": "Number Palindrome ",
  "question": "Write a program to check if the given number is a palindrome number. A palindrome number is a number that is the same after reversing the order. If it is a palindrome return True and if not return False. Check the numbers 121 and 125.",
  "answer": "True False",
  "Comment": "#Check number 121 \n #Check number 125",
  "hint": "Reverse the given string and save it in a different variable to compare with the original.",
  "solution": "def palindrome(number):\n  original_num = number\n\n  reverse_num = 0\n  while number > 0:\n    reminder = number % 10\n    reverse_num = (reverse_num * 10) + reminder\n    number = number // 10\n\n  if original_num == reverse_num:\n    print(True)\n  else:\n    print(False)\n\npalindrome(121)\npalindrome(125)",
  "difficulty_id": 2,
  "language_id": 3
},
{
  "name": "Merge List",
  "question": "Create a list from 2 given lists using the following condition: the new list should contain odd numbers from the first list and even numbers from the second list.",
  "answer": " [25, 35, 40, 60, 90]",
  "comment": "#Use the following lists to solve the question \n # list1 = [10, 20, 25, 30, 35] \n # list2 = [40, 45, 60, 75, 90]",
  "hint": " Loop through the list to check for the given condition. If meets the condition add to the return array.",
  "solution": "def merge_list(list1, list2):\n    result_list = []\n\n    for num in list1:\n      if num % 2 != 0:\n        result_list.append(num)\n\n    for num in list2:\n      if num % 2 == 0:\n        result_list.append(num)\n    return result_list\n\nlist1 = [10, 20, 25, 30, 35]\nlist2 = [40, 45, 60, 75, 90]\nprint(merge_list(list1, list2))",
  "difficulty_id": 2,
  "language_id": 3
},
{
  "name": "Permutations",
  "question": "Write a python program that generates all possible strings from a given set of letters.",
  "answer": "['abc', 'acb', 'bac', 'bca', 'cab', 'cba']",
  "comment": "letters = \"abc\"",
  "hint": "Determine the length of the string and then create a loop in order to find all the permutations of the given letters.",
  "solution": "def generate_permutations_naive(data):\n  if len(data) == 0:\n    return ['']\n  permutations = []\n  for i in range(len(data)):\n    remaining = data[:i] + data[i+1:]\n    for perm in generate_permutations_naive(remaining):\n        permutations.append(data[i] + perm)\n  return permutations\n\nletters = \"abc\"\nall_permutations = generate_permutations_naive(letters)\nprint(all_permutations)",
  "difficulty_id": 2,
  "language_id": 3
},
{
  "name": "Dictionary Iteration",
  "question": "From a dictionary, print only the items with an odd value of less than 45. Return the key and value of the pairs that match.",
  "answer": "Amy 31 Penny 5",
  "comment": "dic={'Sheldon': 45, 'Amy': 31, 'Raj':312, 'Leonard': 400, 'Penny':5, 'Howard':47}",
  "hint": "Run a loop over all the key-value pairs of the dictonary. Then check if the value is odd and less than 45.",
  "solution": "dic={'Sheldon': 45, 'Amy': 31, 'Raj':312, 'Leonard': 400, 'Penny':5, 'Howard':47}\nfor i,j in dic.items():\n  if (j%2!=0) and (j<45):\n    print(i, j)",
  "difficulty_id": 2,
  "language_id": 3
},
{
  "name": "2nd Largest Number",
  "question": "For the given array below find the second largest number.",
  "answer": "77",
  "hint": "You can use the Arrays.sort() method to sort the array and then return the second-to-last element. To use the Arrays.sort() method make sure to import java.util.Arrays .",
  "comment": "//int[] second = {44, 66, 99, 77, 33, 22, 55};",
  "solution": "import java.util.Arrays;\n\npublic class Main {\n    public static int getSecondLargest(int[] a, int total) {\n        Arrays.sort(a);\n        return a[total - 2];\n    }\n\n    public static void main(String[] args) {\n        int[] second = {44, 66, 99, 77, 33, 22, 55};\n        System.out.println(getSecondLargest(second, 7));\n    }\n}",
  "difficulty_id": 2,
  "language_id": 1
},
{
  "name": "Counting Characters",
  "question": "Extract and count the amount of each character in a string and return it as an HashMap.",
  "answer": "{a=2, A=1, b=2, B=1, c=2, C=1, d=2, D=1}",
  "hint": "Create a HashMap to store the data. Loop thorough the characters in the string. If the character exists add 1 to the existing number, if the character doesn’t exist add it with count of 1.",
 "comment": "//Check the following string \n String str = \"abcdABCDabcd\";",
  "solution": "import java.util.*;\nclass Main {\n  static void getOccurringChar(String str){\n    char[] chars = str.toCharArray();\n    Map<Character, Integer> charsCount = new HashMap<>();\n  for (char c : chars) {\n    if (charsCount.containsKey(c)) {\n      charsCount.put(c, charsCount.get(c) + 1);\n    } else\n      charsCount.put(c, 1);\n  }\n  System.out.println(charsCount); \n  } \n\n  public static void main(String[] args){\n    String str = \"abcdABCDabcd\";\n    getOccurringChar(str);\n  }\n}",
  "difficulty_id": 2,
  "language_id": 1
},
{
  "name": "Remove Word",
  "question": "Given the string below write a program in order to remove the given word.",
  "answer": "CodeIT is the best website",
  "hint": "You can use the replaceAll method in order to remove the given word.",
  "comment": "String str = \"CodeIT is the best worst website\";\nString word = \"worst\";",
  "solution": "import java.io.*;\n\nclass Main {\n    public static void main(String[] args){\n      String str = \"CodeIT is the best worst website\";\n      String word = \"worst\";\n      str = str.replaceAll(\"worst \", \"\");\n      str = str.trim();\n      System.out.print(str);\n    }\n}",
  "difficulty_id": 2,
  "language_id": 1
},
{
  "name": "Nth Fibonacci",
  "question": "Write a program to find the nth Fibonacci number.",
  "answer": "55",
  "hint": "The Fibonacci sequence is a sequence in which each number is the sum of the two preceding ones. Create an array of size n+1 to store Fibonacci numbers. Initialize the first 2 Fibonacci numbers 0 and 1. Then create a loop that sums the two preceding numbers and stores it in the array.",
  "comment": "//Use the below int as the nth Fibonacci number\nint n = 10;",
  "solution": "public class Main {\n  public static void main(String[] args) {\n      int n = 10;\n      int[] dp = new int[n + 1];\n      dp[0] = 0;\n      dp[1] = 1;\n      for (int i = 2; i <= n; i++) {\n          dp[i] = dp[i - 1] + dp[i - 2];\n      }\n      System.out.println(dp[n]);\n  }\n}",
  "difficulty_id": 2,
  "language_id": 1
},
{
  "name": "Recursive Linear Search",
  "question": "Given an array of elements white a function to recursively search a given element in the array. Return the number being searched and the index. ",
  "answer": "1",
  "hint": " Linear search algorithm is defined as a sequential search algorithm that starts at one end and goes through each element of a list until the desired element is found; otherwise, the search continues till the end of the dataset.",
  "comment": "int x = 60;\n int arr[] = new int[] { 25, 60, 18, 3, 10 };",
  "solution": "public class Main {\n\n    static int recursiveSearch(int arr[], int l, int r, int x){\n        if (r < l)\n            return -1;\n        if (arr[l] == x)\n            return l;\n        if (arr[r] == x)\n            return r;\n        return recursiveSearch(arr, l + 1, r - 1, x);\n    }\n\n    public static void main(String[] args){\n        int x = 60;\n        int arr[] = new int[] { 25, 60, 18, 3, 10 };\n        int index\n            = recursiveSearch(arr, 0, arr.length - 1, x);\n        if (index != -1)\n        System.out.println(index);\n\n        else\n          System.out.println(x + \"is not present\");\n    }\n}",
  "difficulty_id": 3,
  "language_id": 1
},
{
  "name": "Make Change",
  "question": "Write a program to find the minimum number of coins needed to make change for the given amount below.",
  "answer": "4",
  "hint": "Define an array with the coin denominations. Create another array of size amount + 1 to store the minmium number of coins needed. Loop through each amount from 0-76 and each coin demonination.If the current amount is greater than or equal to the coin value, update the minimum number of coins.",
  "comment": "int amount = 76;",
  "solution": "import java.util.Arrays;\n\npublic class Main {\n  public static void main(String[] args) {\n      int[] coins = {1, 5, 10, 25};\n      int amount = 76;\n      int[] dp = new int[amount + 1];\n      Arrays.fill(dp, Integer.MAX_VALUE);\n      dp[0] = 0;\n      for (int i = 1; i <= amount; i++) {\n          for (int j = 0; j < coins.length; j++) {\n              if (i >= coins[j]) {\n                  dp[i] = Math.min(dp[i], dp[i - coins[j]] + 1);\n              }\n          }\n      }\n      System.out.println(dp[amount]);\n  }\n}",
  "difficulty_id": 2,
  "language_id": 1
},
{
  "name": "Resistor Color",
  "question": "Resistors have a resistance value. To figure out the resistance value of resistor color coded bands are printed on them. Create a program that figures out what the resistance value of a band is based on the color. Then find the index of the color grey.",
  "answer": "8",
  "hint": "Create an array with all of the colors in order according to their encoded value. Then create a function that accepts a string and find the indexOf the color provided. ",
  "comment": "// Encoded Colors: black:0, brown:1, red:2, orange:3, yellow:4, green:5, blue:6, violet:7, grey:8, white:9.",
  "solution": "export const colorCode = (color: string) => {\n  return COLORS.indexOf(color)\n}\nexport const COLORS = [\n      'black',\n      'brown',\n      'red',\n      'orange',\n      'yellow',\n      'green',\n      'blue',\n      'violet',\n      'grey',\n      'white',\n]\nconsole.log(colorCode(\"grey\"));",
  "difficulty_id": 1,
  "language_id": 4
},
{
  "name": "Leap Year",
  "question": "A Leap year occurs when the year is evenly divisible by 4. Exception is if the year is evenly divisible by 100, then it’s only a leap year if the year is also evenly divisible by 400. Write a program that determines if the given year is a leap year and returns a Boolean. Test is with the years: 1997, 1990, 2000.",
  "answer": "false false true",
  "hint": "Write a function that accepts a number and returns a Boolean determined by using logical operators.",
  "comment": "// Check the years 1997, 1990, and 2000",
  "solution": "export function isLeap(year: number): boolean {\n    return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)\n}\nconsole.log(isLeap(1997))\nconsole.log(isLeap(1990))\nconsole.log(isLeap(2000))",
  "difficulty_id": 1,
  "language_id": 4
},
{
  "name": "Target Darts",
  "question": "Write a function that returns the earned points in a single toss of a darts game. There will be 4 different point possibilities: outside the target:0, outer circle: 1pt. r:10 units, middle circle:5pt. r: 5 units, and inner circle: 10pt. r:1 unit. Write a function that given point (x,y) on target returns the correct amount of points.",
  "answer": "5",
  "hint": "Calculate the Euclidean distance. Then use conditional statements to return the point total based on the which category the distance falls into.",
  "comment": "//Find the score for coordinates x:1, y:2",
  "solution": "export function score(x: number, y: number): number {\n  const distance = Math.sqrt(x ** 2 + y ** 2)\n  if (distance <= 1) {\n    return 10\n  } else if (distance <= 5) {\n    return 5\n  } else if (distance <= 10) {\n    return 1\n  } else {\n    return 0\n  }\n}\nconsole.log(score(1,2))",
  "difficulty_id": 1,
  "language_id": 4
},
{ 
  "name": "Default User",
  "question": "Using the defaultUser information below create a User interface and Post interface. Then console.log the defaultUser information.",
  "answer": "{  id: 1,  firstName: 'Emmet',  lastName: 'Brickowski',  role: 'admin',  posts: [    { id: 1, title: 'Where are my pants?' },    { id: 2, title: 'Everything is awesome!' }  ]}",
  "hint": "Create a User interface first with all of the variables found below. Posts should be an array of posts. Then create a Post interface with the post variables. ",
  "comment": "export const defaultUser: User = {\n  id: 1,\n  firstName: \"Emmet\",\n  lastName: \"Brickowski\",\n  role: \"admin\",\n  posts: [\n    {\n      id: 1,\n      title: \"Where are my pants?\",\n    },\n    {\n      id: 2,\n      title: \"Everything is awesome!\",\n    },\n  ],\n};\nconsole.log(defaultUser)",
  "solution": "interface User {\n  id: number;\n  firstName: string;\n  lastName: string;\n  role: \"admin\" | \"user\" | \"super-admin\";\n  posts: Array<Post>;\n}\ninterface Post {\n  id: number;\n  title: string;\n}\n\nexport const defaultUser: User = {\n  id: 1,\n  firstName: \"Emmet\",\n  lastName: \"Brickowski\",\n  role: \"admin\",\n  posts: [\n    {\n      id: 1,\n      title: \"Where are my pants?\",\n    },\n    {\n      id: 2,\n      title: \"Everything is awesome!\",\n    },\n  ],\n};\nconsole.log(defaultUser)",
  "difficulty_id": 1,
  "language_id": 4
  }



 
] 